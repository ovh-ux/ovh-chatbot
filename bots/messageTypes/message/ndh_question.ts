"use strict";

import * as Bluebird from "bluebird";
import { TextMessage } from "../../../platforms/generics";

const questions = [
  "Pourrais-tu nous dire combien fait la multiplication de ces 3 chiffres. Le nombre de datacenters chez OVH, le nombre de pays dans lesquels nous sommes implant√©s et l'√¢ge de la soci√©t√© OVH ?",
  "Quel est le code de la couleur du logo d'OVH ?",
  "O√π se situe le si√®ge social d'OVH ?",
  "Combien de langues sont disponibles sur le site ovh.com ?",
  "Que veut dire OVH ?",
  "Quelle est ma version ? Petit indice: je suis open source",
  "Combien j'ai de contributeurs (sur github)?",
  "Combien de partenaires techniques poss√®de OVH ? indice: https://www.ovh.com/fr/apropos/partenaires-techniques.xml",
  "Combien de temps faut-il pour lire l'article sur mon d√©veloppement ? Petit indice: l'article se trouve sur le blog d'OVH",
  "Combien de questions diff√©rentes je poss√®de ? Petit indice: je suis open source ü§ó"
];
const base = "Salut √† toi üëã, tu as soif ? üç∫ Il faut la m√©riter si tu en veux. ";

class NdhQuestion {
  static action (senderId?, message?, entities?, res?): Promise<any> {
    return Bluebird.resolve({ responses: [new TextMessage(base + questions[Math.floor(Math.random() * questions.length)])], feedback: false });
  }
}

export default { ndh_question: NdhQuestion };
